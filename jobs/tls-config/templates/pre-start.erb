#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

<%= p('pre_start_head') %>

export SSL_CERT_LOCATION="<%= p('cert_folder') %>"
export NGINX_CONFIG_LOCATION="<%= p('nginx_conf_folder') %>"

if [ ! -d "${SSL_CERT_LOCATION}" ]; then
  mkdir -p "${SSL_CERT_LOCATION}"
fi

if [ ! -d "${NGINX_CONFIG_LOCATION}" ]; then
  mkdir -p "${NGINX_CONFIG_LOCATION}"
fi

echo "deleting old keys"
#rm $SSL_CERT_LOCATION/*.key $SSL_CERT_LOCATION/*.cert;

<%
p('certs').each do |cert|
%>

## Using EOF multi line instead of "echo -n" to avoid problems with quotes

cat <<- "_EOF_<%= cert["name"] %>.ca.crt.key_" > /${SSL_CERT_LOCATION}/<%= cert["name"] %>.chained.crt
<%= cert["certificate"]["ca"] %>
_EOF_<%= cert["name"] %>.ca.crt.key_

cat <<- "_EOF_<%= cert["name"] %>.key_" > /${SSL_CERT_LOCATION}/<%= cert["name"] %>.key
<%= cert["certificate"]["private_key"] %>
_EOF_<%= cert["name"] %>.key_

cat <<- "_EOF_<%= cert["name"] %>.crt_" > /${SSL_CERT_LOCATION}/<%= cert["name"] %>.crt
<%= cert["certificate"]["certificate"] %>
_EOF_<%= cert["name"] %>.crt_

cat <<- "_EOF_<%= cert["name"] %>.conf_" > /${NGINX_CONFIG_LOCATION}/<%= cert["name"] %>.conf

server {
  listen 8344 tls;
  server_name <%= cert["hostnames"].join(" ") %>;

  ssl_certificate /${SSL_CERT_LOCATION}/<%= cert["name"] %>.crt;
  ssl_certificate_key /${SSL_CERT_LOCATION}/<%= cert["name"] %>.key;

  # SSL configuration
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://127.0.0.1:80;
  }
}
<%= cert["vhostconf"] %>
_EOF_<%= cert["name"] %>.conf_

<% end %>
<%= p('pre_start_tail') %>
